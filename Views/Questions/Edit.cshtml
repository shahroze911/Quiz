@model Quiz.Models.Question

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <h4>Question</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.QuestionID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, "CategoryID")
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuestionText)
                        @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuestionType)
                        <div>
                            @Html.RadioButtonFor(model => model.QuestionType, "Multiple Choice") Multiple Choice
                            @Html.RadioButtonFor(model => model.QuestionType, "Write-in") Write-in
                            @Html.RadioButtonFor(model => model.QuestionType, "Image") Image
                        </div>
                        @Html.ValidationMessageFor(model => model.QuestionType, "", new { @class = "text-danger" })
                    </div>

                    <div id="options" class="form-group" style="display: none;">
                        <div>
                            @Html.LabelFor(model => model.OptionA)
                            @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.OptionB)
                            @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.OptionC)
                            @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.OptionD)
                            @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div id="writeInAnswer" class="form-group" style="display: none;">
                        @Html.LabelFor(model => model.CorrectAnswer)
                        @Html.TextBoxFor(model => model.CorrectAnswer, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
                    </div>

                    <!-- Image upload for Option A -->
                    <div id="imageOptions" class="form-group" style="display:none;">
                        <div class="form-group">
                            @Html.Label("Option A Image")
                            <input type="file" id="optionAImage" name="optionAImage" accept="image/*" />
                            <span id="optionAUploaded" style="display: none;">Uploaded successfully!</span>
                            <span id="optionAError" style="display: none; color: red;">Failed to upload image!</span>
                            @Html.ValidationMessageFor(model => model.OptionAImageData, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Option B Image")
                            <input type="file" id="optionBImage" name="optionBImage" accept="image/*" />
                            <span id="optionBUploaded" style="display: none;">Uploaded successfully!</span>
                            <span id="optionBError" style="display: none; color: red;">Failed to upload image!</span>
                            @Html.ValidationMessageFor(model => model.OptionBImageData, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Option C Image")
                            <input type="file" id="optionCImage" name="optionCImage" accept="image/*" />
                            <span id="optionCUploaded" style="display: none;">Uploaded successfully!</span>
                            <span id="optionCError" style="display: none; color: red;">Failed to upload image!</span>
                            @Html.ValidationMessageFor(model => model.OptionCImageData, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Option D Image")
                            <input type="file" id="optionDImage" name="optionDImage" accept="image/*" />
                            <span id="optionDUploaded" style="display: none;">Uploaded successfully!</span>
                            <span id="optionDError" style="display: none; color: red;">Failed to upload image!</span>
                            @Html.ValidationMessageFor(model => model.OptionDImageData, "", new { @class = "text-danger" })
                        </div>
                    </div>

                        <!-- Include similar sections for other options if needed -->

                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("input[name='QuestionType']").change(function () {
                var questionType = $(this).val();
                if (questionType === "Multiple Choice") {
                    $("#options").show();
                    $("#writeInAnswer").hide();
                    $("#imageOptions").hide();

                } else if (questionType === "Write-in") {
                    $("#options").hide();
                    $("#writeInAnswer").show();
                    $("#imageOptions").hide();
                } else {
                    $("#options").hide();
                    $("#writeInAnswer").hide();
                    $("#imageOptions").show();
                }
            });

            // Trigger change event on page load to initialize visibility
            $("input[name='QuestionType']:checked").change();
            // Function to handle image upload
            function handleImageUpload(optionInputId, uploadedId, errorId) {
                $(optionInputId).change(function () {
                    var file = this.files[0];
                    var formData = new FormData();

                    formData.append($(optionInputId).attr('name'), file);
                    formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());

                    $.ajax({
                        url: '@Url.Action("Edit", "Questions", new { id = Model.QuestionID })', // Adjust the URL accordingly
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (result) {
                            console.log('Upload successful:', result);
                            $(uploadedId).show().text('Uploaded successfully!');
                            $(errorId).hide();
                        },
                        error: function (xhr, status, error) {
                            console.error('Upload error:', error);
                            $(uploadedId).hide();
                            $(errorId).show().text('Failed to upload image!');
                        }
                    });
                });
            }

            // Call the function for Option A
            handleImageUpload('#optionAImage', '#optionAUploaded', '#optionAError');
            // Include similar calls for other options if needed
        });
    </script>
}
